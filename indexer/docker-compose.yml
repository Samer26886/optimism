version: '3.8'

services:
  postgres:
    image: postgres:latest
    environment:
      - POSTGRES_USER=db_username
      - POSTGRES_PASSWORD=db_password
      - POSTGRES_DB=db_name
      - PGDATA=/data/postgres
      - POSTGRES_HOST_AUTH_METHOD=trust
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -q -U db_username -d db_name" ]
    ports:
      - "5434:5432"
    volumes:
      - postgres_data:/data/postgres

  indexer:
    build:
      context: ..
      dockerfile: indexer/Dockerfile.refresh
    command: ["indexer-refresh", "processor"]
    # healthcheck:
    # Add healthcheck once figure out good way how
    # maybe after we add metrics?
    ports:
      - 8080:8080
    environment:
      - INDEXER_DB_PORT=5432
      - INDEXER_DB_USER=db_username
      - INDEXER_DB_PASSWORD=db_password
      - INDEXER_DB_NAME=db_name
      - INDEXER_DB_HOST=postgres
      - INDEXER_CONFIG=/configs/indexer.toml
    volumes:
      - ./indexer.toml:/configs/indexer.toml
    depends_on:
      postgres:
        condition: service_healthy

  api:
    build:
      context: ..
      dockerfile: indexer/Dockerfile.refresh
    command: ["indexer-refresh", "api"]
    healthcheck:
      test: wget localhost:8080/healthz -q -O - > /dev/null 2>&1
    ports:
      - 8080:8080
    environment:
      - INDEXER_DB_PORT=5432
      - INDEXER_DB_USER=db_username
      - INDEXER_DB_PASSWORD=db_password
      - INDEXER_DB_NAME=db_name
      - INDEXER_DB_HOST=postgres
      - INDEXER_CONFIG=/configs/indexer.toml
    volumes:
      - ./indexer.toml:/configs/indexer.toml
    depends_on:
      postgres:
        condition: service_healthy
        
  ui:
    build:
      context: ..
      dockerfile: indexer/ui/Dockerfile
    environment:
      - DATABASE_URL=${DATABASE_URL:-postgresql://db_username:db_password@postgres:5432/db_name}
    ports:
      - 5555:5555
    
    healthcheck:
      test: wget localhost:5555 -q -O - > /dev/null 2>&1
    depends_on:
      postgres:
        condition: service_healthy

# add back once indexer is added
  #   prisma-check: 
    #     restart: "no"
    #     build:
      #       context: ..
      #       dockerfile: indexer/ui/Dockerfile
    #     command: ./prisma.sh --check
    #     environment:
#       - DATABASE_URL=${DATABASE_URL:-postgresql://db_username:db_password@postgres:5432/db_name}
    #     depends_on:
      #       indexer:
        #         condition: service_healthy
      #       postgres:
        #         condition: service_healthy

volumes:
  postgres_data:
